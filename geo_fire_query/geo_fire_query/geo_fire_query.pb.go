// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: geo_fire_query/geo_fire_query.proto

package geo_fire_query

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FilterDistance int32

const (
	FilterDistance_None   FilterDistance = 0
	FilterDistance_One    FilterDistance = 1
	FilterDistance_Five   FilterDistance = 2
	FilterDistance_Twenty FilterDistance = 3
)

// Enum value maps for FilterDistance.
var (
	FilterDistance_name = map[int32]string{
		0: "None",
		1: "One",
		2: "Five",
		3: "Twenty",
	}
	FilterDistance_value = map[string]int32{
		"None":   0,
		"One":    1,
		"Five":   2,
		"Twenty": 3,
	}
)

func (x FilterDistance) Enum() *FilterDistance {
	p := new(FilterDistance)
	*p = x
	return p
}

func (x FilterDistance) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterDistance) Descriptor() protoreflect.EnumDescriptor {
	return file_geo_fire_query_geo_fire_query_proto_enumTypes[0].Descriptor()
}

func (FilterDistance) Type() protoreflect.EnumType {
	return &file_geo_fire_query_geo_fire_query_proto_enumTypes[0]
}

func (x FilterDistance) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterDistance.Descriptor instead.
func (FilterDistance) EnumDescriptor() ([]byte, []int) {
	return file_geo_fire_query_geo_fire_query_proto_rawDescGZIP(), []int{0}
}

type OrderBy int32

const (
	OrderBy_Newest   OrderBy = 0
	OrderBy_Favorite OrderBy = 1
	OrderBy_A_to_Z   OrderBy = 2
	OrderBy_Z_to_A   OrderBy = 3
)

// Enum value maps for OrderBy.
var (
	OrderBy_name = map[int32]string{
		0: "Newest",
		1: "Favorite",
		2: "A_to_Z",
		3: "Z_to_A",
	}
	OrderBy_value = map[string]int32{
		"Newest":   0,
		"Favorite": 1,
		"A_to_Z":   2,
		"Z_to_A":   3,
	}
)

func (x OrderBy) Enum() *OrderBy {
	p := new(OrderBy)
	*p = x
	return p
}

func (x OrderBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderBy) Descriptor() protoreflect.EnumDescriptor {
	return file_geo_fire_query_geo_fire_query_proto_enumTypes[1].Descriptor()
}

func (OrderBy) Type() protoreflect.EnumType {
	return &file_geo_fire_query_geo_fire_query_proto_enumTypes[1]
}

func (x OrderBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderBy.Descriptor instead.
func (OrderBy) EnumDescriptor() ([]byte, []int) {
	return file_geo_fire_query_geo_fire_query_proto_rawDescGZIP(), []int{1}
}

type Day int32

const (
	Day_Monday    Day = 0
	Day_Tuesday   Day = 1
	Day_Wednesday Day = 2
	Day_Thursday  Day = 3
	Day_Friday    Day = 4
	Day_Saturday  Day = 5
	Day_Sunday    Day = 6
)

// Enum value maps for Day.
var (
	Day_name = map[int32]string{
		0: "Monday",
		1: "Tuesday",
		2: "Wednesday",
		3: "Thursday",
		4: "Friday",
		5: "Saturday",
		6: "Sunday",
	}
	Day_value = map[string]int32{
		"Monday":    0,
		"Tuesday":   1,
		"Wednesday": 2,
		"Thursday":  3,
		"Friday":    4,
		"Saturday":  5,
		"Sunday":    6,
	}
)

func (x Day) Enum() *Day {
	p := new(Day)
	*p = x
	return p
}

func (x Day) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Day) Descriptor() protoreflect.EnumDescriptor {
	return file_geo_fire_query_geo_fire_query_proto_enumTypes[2].Descriptor()
}

func (Day) Type() protoreflect.EnumType {
	return &file_geo_fire_query_geo_fire_query_proto_enumTypes[2]
}

func (x Day) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Day.Descriptor instead.
func (Day) EnumDescriptor() ([]byte, []int) {
	return file_geo_fire_query_geo_fire_query_proto_rawDescGZIP(), []int{2}
}

type GeoPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *GeoPoint) Reset() {
	*x = GeoPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geo_fire_query_geo_fire_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoPoint) ProtoMessage() {}

func (x *GeoPoint) ProtoReflect() protoreflect.Message {
	mi := &file_geo_fire_query_geo_fire_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoPoint.ProtoReflect.Descriptor instead.
func (*GeoPoint) Descriptor() ([]byte, []int) {
	return file_geo_fire_query_geo_fire_query_proto_rawDescGZIP(), []int{0}
}

func (x *GeoPoint) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GeoPoint) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type BusinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeoPoint       *GeoPoint      `protobuf:"bytes,1,opt,name=geoPoint,proto3" json:"geoPoint,omitempty"`
	FilterDistance FilterDistance `protobuf:"varint,2,opt,name=filterDistance,proto3,enum=geofirequery.FilterDistance" json:"filterDistance,omitempty"`
	OrderBy        OrderBy        `protobuf:"varint,3,opt,name=orderBy,proto3,enum=geofirequery.OrderBy" json:"orderBy,omitempty"`
}

func (x *BusinessRequest) Reset() {
	*x = BusinessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geo_fire_query_geo_fire_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessRequest) ProtoMessage() {}

func (x *BusinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geo_fire_query_geo_fire_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessRequest.ProtoReflect.Descriptor instead.
func (*BusinessRequest) Descriptor() ([]byte, []int) {
	return file_geo_fire_query_geo_fire_query_proto_rawDescGZIP(), []int{1}
}

func (x *BusinessRequest) GetGeoPoint() *GeoPoint {
	if x != nil {
		return x.GeoPoint
	}
	return nil
}

func (x *BusinessRequest) GetFilterDistance() FilterDistance {
	if x != nil {
		return x.FilterDistance
	}
	return FilterDistance_None
}

func (x *BusinessRequest) GetOrderBy() OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return OrderBy_Newest
}

type OperationalHours struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day   Day    `protobuf:"varint,1,opt,name=day,proto3,enum=geofirequery.Day" json:"day,omitempty"`
	Start string `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End   string `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *OperationalHours) Reset() {
	*x = OperationalHours{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geo_fire_query_geo_fire_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationalHours) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationalHours) ProtoMessage() {}

func (x *OperationalHours) ProtoReflect() protoreflect.Message {
	mi := &file_geo_fire_query_geo_fire_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationalHours.ProtoReflect.Descriptor instead.
func (*OperationalHours) Descriptor() ([]byte, []int) {
	return file_geo_fire_query_geo_fire_query_proto_rawDescGZIP(), []int{2}
}

func (x *OperationalHours) GetDay() Day {
	if x != nil {
		return x.Day
	}
	return Day_Monday
}

func (x *OperationalHours) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *OperationalHours) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line1 string `protobuf:"bytes,1,opt,name=line1,proto3" json:"line1,omitempty"`
	Line2 string `protobuf:"bytes,2,opt,name=line2,proto3" json:"line2,omitempty"`
	City  string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	State string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Zip   string `protobuf:"bytes,5,opt,name=zip,proto3" json:"zip,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geo_fire_query_geo_fire_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_geo_fire_query_geo_fire_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_geo_fire_query_geo_fire_query_proto_rawDescGZIP(), []int{3}
}

func (x *Address) GetLine1() string {
	if x != nil {
		return x.Line1
	}
	return ""
}

func (x *Address) GetLine2() string {
	if x != nil {
		return x.Line2
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

type Distance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DistanceMi float64 `protobuf:"fixed64,1,opt,name=distanceMi,proto3" json:"distanceMi,omitempty"`
	DistanceKm float64 `protobuf:"fixed64,2,opt,name=distanceKm,proto3" json:"distanceKm,omitempty"`
}

func (x *Distance) Reset() {
	*x = Distance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geo_fire_query_geo_fire_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Distance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Distance) ProtoMessage() {}

func (x *Distance) ProtoReflect() protoreflect.Message {
	mi := &file_geo_fire_query_geo_fire_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Distance.ProtoReflect.Descriptor instead.
func (*Distance) Descriptor() ([]byte, []int) {
	return file_geo_fire_query_geo_fire_query_proto_rawDescGZIP(), []int{4}
}

func (x *Distance) GetDistanceMi() float64 {
	if x != nil {
		return x.DistanceMi
	}
	return 0
}

func (x *Distance) GetDistanceKm() float64 {
	if x != nil {
		return x.DistanceKm
	}
	return 0
}

type Business struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Favorites        int32               `protobuf:"varint,3,opt,name=favorites,proto3" json:"favorites,omitempty"`
	Address          *Address            `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Distance         *Distance           `protobuf:"bytes,5,opt,name=distance,proto3" json:"distance,omitempty"`
	OperationalHours []*OperationalHours `protobuf:"bytes,6,rep,name=operationalHours,proto3" json:"operationalHours,omitempty"`
	DateCreated      string              `protobuf:"bytes,7,opt,name=dateCreated,proto3" json:"dateCreated,omitempty"`
	LastModified     string              `protobuf:"bytes,8,opt,name=lastModified,proto3" json:"lastModified,omitempty"`
}

func (x *Business) Reset() {
	*x = Business{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geo_fire_query_geo_fire_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Business) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Business) ProtoMessage() {}

func (x *Business) ProtoReflect() protoreflect.Message {
	mi := &file_geo_fire_query_geo_fire_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Business.ProtoReflect.Descriptor instead.
func (*Business) Descriptor() ([]byte, []int) {
	return file_geo_fire_query_geo_fire_query_proto_rawDescGZIP(), []int{5}
}

func (x *Business) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Business) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Business) GetFavorites() int32 {
	if x != nil {
		return x.Favorites
	}
	return 0
}

func (x *Business) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Business) GetDistance() *Distance {
	if x != nil {
		return x.Distance
	}
	return nil
}

func (x *Business) GetOperationalHours() []*OperationalHours {
	if x != nil {
		return x.OperationalHours
	}
	return nil
}

func (x *Business) GetDateCreated() string {
	if x != nil {
		return x.DateCreated
	}
	return ""
}

func (x *Business) GetLastModified() string {
	if x != nil {
		return x.LastModified
	}
	return ""
}

type BusinessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Businesses []*Business `protobuf:"bytes,1,rep,name=businesses,proto3" json:"businesses,omitempty"`
}

func (x *BusinessResponse) Reset() {
	*x = BusinessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geo_fire_query_geo_fire_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessResponse) ProtoMessage() {}

func (x *BusinessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geo_fire_query_geo_fire_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessResponse.ProtoReflect.Descriptor instead.
func (*BusinessResponse) Descriptor() ([]byte, []int) {
	return file_geo_fire_query_geo_fire_query_proto_rawDescGZIP(), []int{6}
}

func (x *BusinessResponse) GetBusinesses() []*Business {
	if x != nil {
		return x.Businesses
	}
	return nil
}

var File_geo_fire_query_geo_fire_query_proto protoreflect.FileDescriptor

var file_geo_fire_query_geo_fire_query_proto_rawDesc = []byte{
	0x0a, 0x23, 0x67, 0x65, 0x6f, 0x5f, 0x66, 0x69, 0x72, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2f, 0x67, 0x65, 0x6f, 0x5f, 0x66, 0x69, 0x72, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x67, 0x65, 0x6f, 0x66, 0x69, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x22, 0x44, 0x0a, 0x08, 0x47, 0x65, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x0f, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a,
	0x08, 0x67, 0x65, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x65, 0x6f, 0x66, 0x69, 0x72, 0x65, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x47,
	0x65, 0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x67, 0x65, 0x6f, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x44, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x67, 0x65, 0x6f, 0x66,
	0x69, 0x72, 0x65, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x65, 0x6f, 0x66, 0x69,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x22, 0x5f, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x03,
	0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x67, 0x65, 0x6f, 0x66,
	0x69, 0x72, 0x65, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x44, 0x61, 0x79, 0x52, 0x03, 0x64, 0x61,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x71, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6e, 0x65, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x32,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x7a, 0x69,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x7a, 0x69, 0x70, 0x22, 0x4a, 0x0a, 0x08,
	0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x4d, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x64, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x69, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x4b, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x64, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4b, 0x6d, 0x22, 0xc3, 0x02, 0x0a, 0x08, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x65, 0x6f, 0x66, 0x69,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x65, 0x6f,
	0x66, 0x69, 0x72, 0x65, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x10,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x48, 0x6f, 0x75, 0x72, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x65, 0x6f, 0x66, 0x69, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61,
	0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x4a,
	0x0a, 0x10, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x65, 0x6f, 0x66, 0x69, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x0a,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2a, 0x39, 0x0a, 0x0e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x6e, 0x65, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x46, 0x69, 0x76, 0x65, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x77, 0x65,
	0x6e, 0x74, 0x79, 0x10, 0x03, 0x2a, 0x3b, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x65, 0x77, 0x65, 0x73, 0x74, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x5f,
	0x74, 0x6f, 0x5f, 0x5a, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x5a, 0x5f, 0x74, 0x6f, 0x5f, 0x41,
	0x10, 0x03, 0x2a, 0x61, 0x0a, 0x03, 0x44, 0x61, 0x79, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x6f, 0x6e,
	0x64, 0x61, 0x79, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x65, 0x64, 0x6e, 0x65, 0x73, 0x64, 0x61, 0x79, 0x10,
	0x02, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x10, 0x03, 0x12,
	0x0a, 0x0a, 0x06, 0x46, 0x72, 0x69, 0x64, 0x61, 0x79, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x53,
	0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x75, 0x6e,
	0x64, 0x61, 0x79, 0x10, 0x06, 0x32, 0x60, 0x0a, 0x0c, 0x47, 0x65, 0x6f, 0x46, 0x69, 0x72, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x50, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x67, 0x65, 0x6f, 0x66, 0x69, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x65, 0x6f, 0x66, 0x69, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2c, 0x5a, 0x2a, 0x74, 0x61, 0x70, 0x2e, 0x6d,
	0x61, 0x72, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x67, 0x65, 0x6f, 0x5f, 0x66, 0x69, 0x72, 0x65,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x67, 0x65, 0x6f, 0x5f, 0x66, 0x69, 0x72, 0x65, 0x5f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_geo_fire_query_geo_fire_query_proto_rawDescOnce sync.Once
	file_geo_fire_query_geo_fire_query_proto_rawDescData = file_geo_fire_query_geo_fire_query_proto_rawDesc
)

func file_geo_fire_query_geo_fire_query_proto_rawDescGZIP() []byte {
	file_geo_fire_query_geo_fire_query_proto_rawDescOnce.Do(func() {
		file_geo_fire_query_geo_fire_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_geo_fire_query_geo_fire_query_proto_rawDescData)
	})
	return file_geo_fire_query_geo_fire_query_proto_rawDescData
}

var file_geo_fire_query_geo_fire_query_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_geo_fire_query_geo_fire_query_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_geo_fire_query_geo_fire_query_proto_goTypes = []interface{}{
	(FilterDistance)(0),      // 0: geofirequery.FilterDistance
	(OrderBy)(0),             // 1: geofirequery.OrderBy
	(Day)(0),                 // 2: geofirequery.Day
	(*GeoPoint)(nil),         // 3: geofirequery.GeoPoint
	(*BusinessRequest)(nil),  // 4: geofirequery.BusinessRequest
	(*OperationalHours)(nil), // 5: geofirequery.OperationalHours
	(*Address)(nil),          // 6: geofirequery.Address
	(*Distance)(nil),         // 7: geofirequery.Distance
	(*Business)(nil),         // 8: geofirequery.Business
	(*BusinessResponse)(nil), // 9: geofirequery.BusinessResponse
}
var file_geo_fire_query_geo_fire_query_proto_depIdxs = []int32{
	3, // 0: geofirequery.BusinessRequest.geoPoint:type_name -> geofirequery.GeoPoint
	0, // 1: geofirequery.BusinessRequest.filterDistance:type_name -> geofirequery.FilterDistance
	1, // 2: geofirequery.BusinessRequest.orderBy:type_name -> geofirequery.OrderBy
	2, // 3: geofirequery.OperationalHours.day:type_name -> geofirequery.Day
	6, // 4: geofirequery.Business.address:type_name -> geofirequery.Address
	7, // 5: geofirequery.Business.distance:type_name -> geofirequery.Distance
	5, // 6: geofirequery.Business.operationalHours:type_name -> geofirequery.OperationalHours
	8, // 7: geofirequery.BusinessResponse.businesses:type_name -> geofirequery.Business
	4, // 8: geofirequery.GeoFireQuery.GetBusinesses:input_type -> geofirequery.BusinessRequest
	9, // 9: geofirequery.GeoFireQuery.GetBusinesses:output_type -> geofirequery.BusinessResponse
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_geo_fire_query_geo_fire_query_proto_init() }
func file_geo_fire_query_geo_fire_query_proto_init() {
	if File_geo_fire_query_geo_fire_query_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_geo_fire_query_geo_fire_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geo_fire_query_geo_fire_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geo_fire_query_geo_fire_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationalHours); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geo_fire_query_geo_fire_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geo_fire_query_geo_fire_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Distance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geo_fire_query_geo_fire_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Business); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geo_fire_query_geo_fire_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_geo_fire_query_geo_fire_query_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_geo_fire_query_geo_fire_query_proto_goTypes,
		DependencyIndexes: file_geo_fire_query_geo_fire_query_proto_depIdxs,
		EnumInfos:         file_geo_fire_query_geo_fire_query_proto_enumTypes,
		MessageInfos:      file_geo_fire_query_geo_fire_query_proto_msgTypes,
	}.Build()
	File_geo_fire_query_geo_fire_query_proto = out.File
	file_geo_fire_query_geo_fire_query_proto_rawDesc = nil
	file_geo_fire_query_geo_fire_query_proto_goTypes = nil
	file_geo_fire_query_geo_fire_query_proto_depIdxs = nil
}
